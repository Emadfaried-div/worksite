# Generated by Django 3.2.9 on 2021-12-26 21:02

import ckeditor.fields
import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsible', models.CharField(blank=True, max_length=200, null=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('area', models.CharField(blank=True, choices=[('BM3', 'BM3'), ('BM4', 'BM4'), ('BM5', 'BM5'), ('BM6', 'BM6'), ('CAP_Inj Nessie1', 'CAP_Inj Nessie1'), ('CAP_Inj Nessie2', 'CAP_Inj Nessie2'), ('CAP_Inj Arburg', 'CAP_Inj Arburg'), ('CAP_assempl', 'CAP_assempl'), ('BP360AMP', 'BP360AMP'), ('BP360LV', 'BP360LV'), ('BP460', 'BP460'), ('BP312', 'BP312'), ('Micro-lab', 'Micro-lab'), ('Micro-Chimical', 'Micro-Chimical'), ('BM-Piovan', 'BM-Piovan')], default='Bp360AMP', max_length=100, null=True)),
                ('vendor', models.CharField(blank=True, choices=[('Rommelag', 'Rommelag'), ('HENSE', 'HENSE'), ('ANGEPOT', 'ANGEPOT'), ('M_RASHAD', 'M_RASHAD'), ('HYDRAYLIC_SYSTEM', 'HYDRAYLIC_SYSTEM'), ('ELFARES', 'ELFARES'), ('ABO_ELILAA', 'ABO_ELILAA'), ('NEW_STAR_MOULD', 'NEW_STAR_MOULD'), ('ITALIX', 'ITALIX'), ('FESTO', 'FESTO'), ('SMC', 'SMC'), ('RS', 'RS'), ('NOORGREEN', 'NOORGREEN'), ('REXROTH', 'REXROTH'), ('TALAT_ELMASRY', 'TALAT_ELMASRY'), ('Ousuka-Techno', 'Ousuka-Techno'), ('Eltartosiah', 'Eltartosiah'), ('Bielomatic', 'Bielomatic')], default='?', max_length=200, null=True)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('DONE', 'done'), ('NOT_YET', 'not-yet')], default='not-yet', max_length=100, null=True)),
                ('delete_obj', models.CharField(blank=True, default='delete?', max_length=100, null=True)),
                ('update_obj', models.CharField(blank=True, default='Edit?', max_length=200, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_view_daily notes', 'can_view_month menets'),),
            },
        ),
        migrations.CreateModel(
            name='MonthMenets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_date', models.CharField(blank=True, max_length=200, null=True)),
                ('task', models.CharField(max_length=200)),
                ('area', models.CharField(blank=True, choices=[('BM3', 'BM3'), ('BM4', 'BM4'), ('BM5', 'BM5'), ('BM6', 'BM6'), ('CAP_Inj Nessie1', 'CAP_Inj Nessie1'), ('CAP_Inj Nessie2', 'CAP_Inj Nessie2'), ('CAP_Inj Arburg', 'CAP_Inj Arburg'), ('CAP_assempl', 'CAP_assempl'), ('BP360AMP', 'BP360AMP'), ('BP360LV', 'BP360LV'), ('BP460', 'BP460'), ('BP312', 'BP312'), ('Micro-lab', 'Micro-lab'), ('Micro-Chimical', 'Micro-Chimical'), ('BM-Piovan', 'BM-Piovan')], default='Bp360AMP', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StoreCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_item_no', models.CharField(max_length=200)),
                ('item_code', models.CharField(max_length=200)),
                ('description1', models.CharField(max_length=200)),
                ('description2', models.CharField(blank=True, max_length=200, null=True)),
                ('Search_text', models.CharField(max_length=200)),
                ('Sp_Branch', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('g_l_cat', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TheOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField()),
                ('section', models.CharField(blank=True, choices=[('ELECTRICAL', 'electerical'), ('MECHANICAL', 'mechanical'), ('UTILITIES', 'utilities')], default='mechanical', max_length=100, null=True)),
                ('market', models.CharField(blank=True, choices=[('LOCAL', 'Local'), ('EXTERNAL', 'External')], default='Local', max_length=200, null=True)),
                ('vendor', models.CharField(blank=True, choices=[('Rommelag', 'Rommelag'), ('HENSE', 'HENSE'), ('ANGEPOT', 'ANGEPOT'), ('M_RASHAD', 'M_RASHAD'), ('HYDRAYLIC_SYSTEM', 'HYDRAYLIC_SYSTEM'), ('ELFARES', 'ELFARES'), ('ABO_ELILAA', 'ABO_ELILAA'), ('NEW_STAR_MOULD', 'NEW_STAR_MOULD'), ('ITALIX', 'ITALIX'), ('FESTO', 'FESTO'), ('SMC', 'SMC'), ('RS', 'RS'), ('NOORGREEN', 'NOORGREEN'), ('REXROTH', 'REXROTH'), ('TALAT_ELMASRY', 'TALAT_ELMASRY'), ('Ousuka-Techno', 'Ousuka-Techno'), ('Eltartosiah', 'Eltartosiah'), ('Bielomatic', 'Bielomatic')], default='?', max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('responseibilty', models.CharField(max_length=200)),
                ('image_of_offer', models.ImageField(blank=True, null=True, upload_to='products')),
                ('image', models.ImageField(upload_to='products')),
                ('offer2_image2', models.ImageField(blank=True, null=True, upload_to='products')),
                ('offer3_image', models.ImageField(blank=True, null=True, upload_to='products')),
                ('quantity', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('totalprice', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThePo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField()),
                ('dept', models.CharField(blank=True, max_length=200, null=True)),
                ('section', models.CharField(blank=True, choices=[('ELECTRICAL', 'electerical'), ('MECHANICAL', 'mechanical'), ('UTILITIES', 'utilities')], default='mechanical', max_length=100, null=True)),
                ('market', models.CharField(blank=True, choices=[('LOCAL', 'Local'), ('EXTERNAL', 'External')], default='Local', max_length=200, null=True)),
                ('vendor', models.CharField(blank=True, choices=[('Rommelag', 'Rommelag'), ('HENSE', 'HENSE'), ('ANGEPOT', 'ANGEPOT'), ('M_RASHAD', 'M_RASHAD'), ('HYDRAYLIC_SYSTEM', 'HYDRAYLIC_SYSTEM'), ('ELFARES', 'ELFARES'), ('ABO_ELILAA', 'ABO_ELILAA'), ('NEW_STAR_MOULD', 'NEW_STAR_MOULD'), ('ITALIX', 'ITALIX'), ('FESTO', 'FESTO'), ('SMC', 'SMC'), ('RS', 'RS'), ('NOORGREEN', 'NOORGREEN'), ('REXROTH', 'REXROTH'), ('TALAT_ELMASRY', 'TALAT_ELMASRY'), ('Ousuka-Techno', 'Ousuka-Techno'), ('Eltartosiah', 'Eltartosiah'), ('Bielomatic', 'Bielomatic')], default='?', max_length=200, null=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('responseibilty', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('image', models.ImageField(upload_to='products')),
                ('document', models.FileField(blank=True, null=True, upload_to='Order-doc/%Y/%m/%D/')),
                ('quantity', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('samples', models.CharField(blank=True, max_length=200, null=True)),
                ('numbers_of_offers', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workapp.theoffer')),
                ('store_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workapp.storecode')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TheOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('dept', models.CharField(blank=True, max_length=200, null=True)),
                ('section', models.CharField(blank=True, choices=[('ELECTRICAL', 'electerical'), ('MECHANICAL', 'mechanical'), ('UTILITIES', 'utilities')], default='mechanical', max_length=100, null=True)),
                ('market', models.CharField(blank=True, choices=[('LOCAL', 'Local'), ('EXTERNAL', 'External')], default='Local', max_length=200, null=True)),
                ('vendor', models.CharField(blank=True, choices=[('Rommelag', 'Rommelag'), ('HENSE', 'HENSE'), ('ANGEPOT', 'ANGEPOT'), ('M_RASHAD', 'M_RASHAD'), ('HYDRAYLIC_SYSTEM', 'HYDRAYLIC_SYSTEM'), ('ELFARES', 'ELFARES'), ('ABO_ELILAA', 'ABO_ELILAA'), ('NEW_STAR_MOULD', 'NEW_STAR_MOULD'), ('ITALIX', 'ITALIX'), ('FESTO', 'FESTO'), ('SMC', 'SMC'), ('RS', 'RS'), ('NOORGREEN', 'NOORGREEN'), ('REXROTH', 'REXROTH'), ('TALAT_ELMASRY', 'TALAT_ELMASRY'), ('Ousuka-Techno', 'Ousuka-Techno'), ('Eltartosiah', 'Eltartosiah'), ('Bielomatic', 'Bielomatic')], default='?', max_length=200, null=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('responseibilty', models.CharField(max_length=200)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('image', models.ImageField(upload_to='products')),
                ('document', models.FileField(blank=True, null=True, upload_to='Order-doc/')),
                ('quantity', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('samples', models.CharField(blank=True, max_length=200, null=True)),
                ('numbers_of_offers', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('notes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workapp.dailynotes')),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workapp.theoffer')),
                ('store_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workapp.storecode')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField()),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('image', models.ImageField(upload_to='products')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Jop_Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departement', models.CharField(blank=True, max_length=50, null=True)),
                ('machine_id', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(auto_now_add=True, verbose_name='Date')),
                ('reporting_time', models.TimeField(blank=True, null=True)),
                ('repair_start_time', models.TimeField(blank=True, null=True)),
                ('repair_end_time', models.TimeField(blank=True, null=True)),
                ('operator', models.CharField(blank=True, max_length=50, null=True)),
                ('section_head', models.CharField(blank=True, max_length=50, null=True)),
                ('noun_damage', models.CharField(blank=True, max_length=1000, null=True)),
                ('possible_cause', models.CharField(blank=True, max_length=1000, null=True)),
                ('repair_steps', ckeditor.fields.RichTextField()),
                ('used_spare_parts', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.ImageField(upload_to='products')),
                ('job_order_image', models.ImageField(upload_to='products')),
                ('repairer', models.CharField(blank=True, max_length=200, null=True)),
                ('responseble_eng', models.CharField(blank=True, max_length=200, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('store_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workapp.storecode')),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=20, null=True)),
                ('image', models.ImageField(upload_to='product/')),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workapp.theoffer')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workapp.theorder')),
                ('po', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='workapp.thepo')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('joined_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BroadCast_Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('message', ckeditor.fields.RichTextField()),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'BroadCast Email to all Member',
                'verbose_name_plural': 'BroadCast Email',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='admins')),
                ('mobile', models.CharField(max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
